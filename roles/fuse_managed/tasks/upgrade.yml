
---

# Used to pull images from registry.redhat.io
- name: Expose vars
  include_vars: "{{ role_path }}/../imagestream_pull_secret/defaults/main.yml"
  
- include_role:
    name: imagestream_pull_secret
  vars:
    namespace: "{{ fuse_namespace }}"
    product_ns_pull_secret_name: "{{ fuse_pull_secret_name }}"

- name: Get existing Grafana dashboards
  shell: oc get grafanadashboards -o name -n {{ fuse_namespace }}
  register: existing_grafana_dashboards_cmd

- name: Delete existing Grafana dashboards
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_grafana_dashboards_cmd.stdout_lines }}"

- name: Get existing service monitors
  shell: oc get servicemonitor -o name -n {{ fuse_namespace }}
  register: existing_service_monitor

- name: Delete existing service monitor
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_service_monitor.stdout_lines }}"

- name: Get existing prometheus rules
  shell: oc get prometheusrules -o name -n {{ fuse_namespace }}
  register: existing_prometheus_rules

- name: Delete existing prometheus rules
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_prometheus_rules.stdout_lines }}"

# patches syndesis operator to remove args passed in previous install
- name: TODO-THIS-IS-ONLY-NEEDED-ON-UPGRADES-FROM-FUSE-1.7-INSTALLS
  shell: oc patch dc/syndesis-operator -p='{"spec":{"template":{"spec":{"containers":[{"name":"syndesis-operator","args":[]}]}}}}}' -n {{ fuse_namespace }}

- name: Download fuse binary
  get_url:
    url: https://github.com/jboss-fuse/fuse-clients/releases/download/{{ fuse_online_release_tag }}/syndesis-{{ fuse_online_release_tag }}-linux-64bit.tar.gz
    dest: /tmp/fuse-binary-archive

- name: Create directory for extraction
  file:
    path: /tmp/fuse-binary
    state: directory

- name: Extract fuse binary
  unarchive:
    src: /tmp/fuse-binary-archive
    dest: /tmp/fuse-binary

- name: Run operator install
  shell: "/tmp/fuse-binary/syndesis-operator install operator  --wait --namespace {{ fuse_namespace }}"

- name: Remove Komodo-Server DC
  shell: oc delete dc komodo-server --namespace {{ fuse_namespace }}

- template:
    src: syndesis-customresource.yml.j2
    dest: /tmp/syndesis-customresource.yml

- name: Update Syndesis custom resource in {{ fuse_namespace }}
  shell: oc apply -f /tmp/syndesis-customresource.yml -n {{ fuse_namespace }}

- name: Wait for new image streams are avilable
  shell: oc get imagestream -n {{ fuse_namespace }} -l "syndesis.io/app=syndesis" -o name | wc -l
  register: is_output
  until: is_output.stdout|int >= 8
  retries: 50
  delay: 10

- name: Patch db deployment configs to make sure they are using image streams from the right namespace
  #shell: oc patch dc/syndesis-db --type=json --patch='[{"op":"replace", "path":"/spec/triggers/1/imageChangeParams/from/namespace", "value":"{{ fuse_namespace }}"}, {"op":"replace", "path":"/spec/triggers/2/imageChangeParams/from/namespace", "value":"{{ fuse_namespace }}"}]' -n {{ fuse_namespace }}
  # NOTE: when the new release of syndesis operator is available, we probably should replace the following line with the one that is commented above, as by the look of the fix, the db should container should use a image stream from the current namespace as well. 
  shell: oc patch dc/syndesis-db --type=json --patch='[{"op":"replace", "path":"/spec/triggers/2/imageChangeParams/from/namespace", "value":"{{ fuse_namespace }}"}]' -n {{ fuse_namespace }}

- name: Patch all the other infrastructure deployment configs to make sure they are using image streams from the right namespace
  shell: oc patch dc/{{ item }} --type=json --patch='[{"op":"replace", "path":"/spec/triggers/0/imageChangeParams/from/namespace", "value":"{{ fuse_namespace }}"}]' -n {{ fuse_namespace }}
  with_items:
    - syndesis-meta
    - syndesis-oauthproxy
    - syndesis-prometheus
    - syndesis-server
    - syndesis-ui

# NOTE: uncomment this when new release of syndesis operator is available
# - name: Remove OpenShift SAR configuration on Fuse Managed OAuth proxy
#  shell: sleep 5; oc get dc syndesis-oauthproxy -o yaml -n {{ fuse_namespace }} | sed '/--openshift-sar/d' | oc apply -f - -n {{ fuse_namespace }}; sleep 5

- name: Wait for a new deployment is started
  shell: oc get pods | grep -- "-deploy" | wc -l
  register: deploy_result
  until: deploy_result.stdout|int > 0
  retries: 50
  delay: 10

# NOTE: This will take a long time at the moment mainly because the current release of the syndesis operator will try to upgrade postgres deployment to new version and it will fail.
# But openshift will roll it back eventually and everything will work again. It just take a while.
# Once new release of syndesis operator is available, this shouldn't be an issue anymore and we can reduce the wait time.
- name: Verify Fuse deployment succeeded
  shell: oc get pods -n {{ fuse_namespace }} --selector="app=syndesis" -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}' | wc -w
  register: fuse_verify_result
  until: fuse_verify_result.stdout|int >= 7
  retries: 100
  delay: 10
  changed_when: False